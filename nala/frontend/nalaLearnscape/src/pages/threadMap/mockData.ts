import type {
  DatabaseNode,
  DatabaseRelationship,
  NodeModule,
} from "./types";

export const mockDatabaseNodes: DatabaseNode[] = [
  {
    node_id: "1",
    node_type: "topic",
    node_name: "Logic",
    node_description: "Mathematical logic fundamentals",
    node_module_id: "MOD_001",
  },
  {
    node_id: "2",
    node_type: "concept",
    node_name: "Propositions",
    node_description: "Basic logical statements",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "3",
    node_type: "concept",
    node_name: "Truth tables",
    node_description: "Truth value analysis",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "4",
    node_type: "concept",
    node_name: "Logical Equivalence Laws",
    node_description: "Equivalence rules",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "5",
    node_type: "concept",
    node_name: "De Morgan's Laws",
    node_description: "Negation distribution laws",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "6",
    node_type: "concept",
    node_name: "Logical Operators",
    node_description: "AND, OR, NOT operations",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "7",
    node_type: "concept",
    node_name: "Inference Rules",
    node_description: "Rules for logical deduction",
    parent_node_id: "1",
    node_module_id: "MOD_001",
  },
  {
    node_id: "8",
    node_type: "concept",
    node_name: "Proof by Contradiction",
    node_description: "Indirect proof method",
    parent_node_id: "7",
    node_module_id: "MOD_002",
  },
  {
    node_id: "9",
    node_type: "concept",
    node_name: "Proof by Contrapositive",
    node_description: "Contrapositive proof method",
    parent_node_id: "7",
    node_module_id: "MOD_002",
  },
  {
    node_id: "10",
    node_type: "topic",
    node_name: "Set Theory",
    node_description: "Mathematical set operations",
    node_module_id: "MOD_003",
  },
  {
    node_id: "11",
    node_type: "concept",
    node_name: "Discrete Proof",
    node_description: "Discrete mathematics proofs",
    parent_node_id: "10",
    node_module_id: "MOD_002",
  },
  {
    node_id: "12",
    node_type: "concept",
    node_name: "Proof Techniques",
    node_description: "Various proof methods",
    parent_node_id: "11",
    node_module_id: "MOD_002",
  },
];

export const mockDatabaseRelationships: DatabaseRelationship[] = [
  {
    relationship_id: 1,
    node_id_1: "1",
    node_id_2: "2",
    relationship_type: "contains",
  },
  {
    relationship_id: 2,
    node_id_1: "1",
    node_id_2: "3",
    relationship_type: "contains",
  },
  {
    relationship_id: 3,
    node_id_1: "1",
    node_id_2: "4",
    relationship_type: "contains",
  },
  {
    relationship_id: 4,
    node_id_1: "1",
    node_id_2: "5",
    relationship_type: "contains",
  },
  {
    relationship_id: 5,
    node_id_1: "1",
    node_id_2: "6",
    relationship_type: "contains",
  },
  {
    relationship_id: 6,
    node_id_1: "1",
    node_id_2: "7",
    relationship_type: "contains",
  },
  {
    relationship_id: 7,
    node_id_1: "7",
    node_id_2: "8",
    relationship_type: "leads_to",
  },
  {
    relationship_id: 8,
    node_id_1: "7",
    node_id_2: "9",
    relationship_type: "leads_to",
  },
  {
    relationship_id: 9,
    node_id_1: "7",
    node_id_2: "11",
    relationship_type: "leads_to",
  },
  {
    relationship_id: 10,
    node_id_1: "11",
    node_id_2: "12",
    relationship_type: "uses",
  },
  {
    relationship_id: 11,
    node_id_1: "10",
    node_id_2: "1",
    relationship_type: "related_to",
  },
];

export const nodeModules: NodeModule[] = [
  { module_id: "MOD_001", module_name: "Basic Logic", color: "#00bcd4" },
  { module_id: "MOD_002", module_name: "Proof Methods", color: "#5c9cfc" },
  { module_id: "MOD_003", module_name: "Set Theory", color: "#4a85f5" },
  { module_id: "MOD_004", module_name: "Number Theory", color: "#ff6b35" },
  { module_id: "MOD_005", module_name: "Graph Theory", color: "#4caf50" },
];
