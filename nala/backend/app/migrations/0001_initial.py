# Generated by Django 5.2.6 on 2025-09-30 12:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('summary', models.TextField()),
                ('week_no', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('index', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.node')),
            ],
            bases=('app.node',),
        ),
        migrations.AddField(
            model_name='node',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.module'),
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('rs_type', models.CharField(choices=[('is_subtopic_of', 'Is_Subtopic_Of'), ('is_prerequisite_of', 'Is_Prerequisite_Of'), ('is_corequisite_of', 'Is_Corequisite_Of'), ('is_contrasted_with', 'Is_Contrasted_With'), ('is_applied_in', 'Is_Applied_In')], max_length=255)),
                ('week_no', models.CharField(blank=True, max_length=50, null=True)),
                ('first_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_node_of_rs', to='app.node')),
                ('second_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_node_of_rs', to='app.node')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('learningStyleBreakdown', models.JSONField(blank=True, default=dict)),
                ('learningStyle', models.CharField(blank=True, choices=[('RETRIEVAL', 'Retrieval Practice'), ('SPACED', 'Spaced Practice'), ('ELABORATION', 'Elaboration'), ('CONCRETE', 'Concrete Examples'), ('INTERLEAVING', 'Interleaving'), ('DUAL_CODING', 'Dual Coding')], default='RETRIEVAL', max_length=20, null=True)),
                ('enrolled_modules', models.ManyToManyField(blank=True, related_name='students', to='app.module')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('convo_id', models.AutoField(primary_key=True, serialize=False)),
                ('convo_title', models.CharField(max_length=500)),
                ('convo_created_date', models.DateTimeField(auto_now_add=True)),
                ('convo_duration', models.IntegerField(blank=True, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='app.module')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='app.student')),
            ],
            options={
                'db_table': 'conversation',
                'ordering': ['-convo_created_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentQuizHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quiz_data', models.JSONField(default=dict)),
                ('student_answers', models.JSONField(blank=True, default=dict)),
                ('score', models.FloatField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('quiz_type', models.CharField(choices=[('weekly', 'Weekly'), ('custom', 'Custom')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.module')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_histories', to='app.student')),
                ('topics_covered', models.ManyToManyField(blank=True, related_name='quizzes', to='app.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.node')),
                ('related_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.topic')),
            ],
            bases=('app.node',),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('msg_id', models.AutoField(primary_key=True, serialize=False)),
                ('msg_sender', models.CharField(max_length=20)),
                ('msg_text', models.TextField()),
                ('msg_timestamp', models.DateTimeField(auto_now_add=True)),
                ('msg_context', models.JSONField(blank=True, null=True)),
                ('msg_evaluation', models.CharField(blank=True, max_length=255, null=True)),
                ('msg_user_feedback', models.TextField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.conversation')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.module')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.student')),
            ],
            options={
                'db_table': 'message',
                'ordering': ['msg_timestamp'],
                'indexes': [models.Index(fields=['student', 'module'], name='message_student_d8aaa8_idx'), models.Index(fields=['conversation', 'msg_timestamp'], name='message_convers_f36642_idx')],
            },
        ),
        migrations.CreateModel(
            name='StudentBloomRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloom_summary', models.JSONField(blank=True, default=dict)),
                ('last_processed_msg_id', models.CharField(blank=True, max_length=255, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloom_records', to='app.module')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloom_records', to='app.student')),
            ],
            options={
                'unique_together': {('student', 'module')},
            },
        ),
        migrations.CreateModel(
            name='StudentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, help_text="Student's notes in JSON/HTML format from Lexical editor")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_notes', to='app.student')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_notes', to='app.topic')),
            ],
            options={
                'db_table': 'student_notes',
                'ordering': ['-updated_at'],
                'unique_together': {('student', 'topic')},
            },
        ),
    ]
